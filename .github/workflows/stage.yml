name: Build and deploy onvif (stage)

env:
  DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOCKER_TAG: ${{ github.event.pull_request.title }}
  PR_BODY: ${{ github.event.pull_request.body }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ACTIONS_STEP_DEBUG: true

on:
  pull_request:
    types:
      - closed

jobs:
  Build:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: self-hosted-stage

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: 5scontrol/onvif
          tags: |
            stage-${{env.DOCKER_TAG}}
            stage-latest

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
        continue-on-error: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=5scontrol/onvif:stage-cache
          cache-to: type=registry,ref=5scontrol/onvif:stage-cache,mode=max
        continue-on-error: false
        env:
          DOCKER_BUILDKIT: 1

  Deploy:
    runs-on: self-hosted-stage
    needs: Build

    steps:
      - name: Pull the latest Docker image
        working-directory: /home/admin1/reps/server
        run: |
          echo "Pulling latest Docker image for onvif"
          ONVIF=stage-${{ env.DOCKER_TAG }} docker-compose pull onvif

      - name: Stop and remove the old onvif container
        working-directory: /home/admin1/reps/server
        run: |
          echo "Stopping and removing the old onvif container..."
          docker-compose rm -fs onvif

      - name: Recreate and restart onvif container
        working-directory: /home/admin1/reps/server
        run: |
          echo "Recreating and restarting the onvif container..."
          ONVIF=stage-${{ env.DOCKER_TAG }} docker-compose up -d --no-deps onvif

  CreateRelease:
    runs-on: self-hosted-stage
    needs: Deploy

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create a GitHub release
        uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: 'v${{ env.DOCKER_TAG }}'
          release_name: 'Release v${{ env.DOCKER_TAG }}'
          body: ${{ env.PR_BODY }}
          draft: false
          prerelease: false
